import pickle
import sys

sys.stdout.reconfigure(encoding="utf-8")

# Исходный словарь: города и средняя температура по годам
city_temperatures = {
    "Москва": {"2017": 9.5, "2018": 8.2, "2019": 7.8, "2020": 9.1, "2021": 10.0, "2022": 9.7},
    "Санкт-Петербург": {"2017": 8.7, "2018": 8.1, "2019": 6.9, "2020": 7.4, "2021": 9.3, "2022": 8.8},
    "Новосибирск": {"2017": 2.5, "2018": 2.0, "2019": 1.7, "2020": 3.1, "2021": 2.9, "2022": 3.3},
    "Екатеринбург": {"2017": 4.4, "2018": 3.2, "2019": 2.8, "2020": 4.1, "2021": 5.0, "2022": 4.6},
    "Казань": {"2017": 6.2, "2018": 6.0, "2019": 5.1, "2020": 6.7, "2021": 7.5, "2022": 6.8},
    "Красноярск": {"2017": 1.3, "2018": 1.2, "2019": 0.5, "2020": 1.8, "2021": 2.0, "2022": 1.7},
    "Владивосток": {"2017": 10.0, "2018": 9.0, "2019": 8.5, "2020": 10.5, "2021": 11.0, "2022": 10.8}
}

# 1. Выводим список городов и их среднюю температуру
print("Города и их температуры:")
for city, temps in city_temperatures.items():
    print(f"{city}: {temps}")

# 2. Определяем год с максимальной средней температурой для каждого города
print("\nГод с максимальной средней температурой для каждого города:")
for city, temps in city_temperatures.items():
    max_year = max(temps, key=temps.get)
    print(f"{city}: {max_year} ({temps[max_year]}°C)")

# 3. Города, где самым холодным считался 2019 год
coldest_2019 = [city for city, temps in city_temperatures.items() if temps["2019"] == min(temps.values())]
print("\nГорода, где самым холодным считался 2019 год:")
print(coldest_2019)

# 4. Города, где температура в 2017 году больше на 1 градус, чем в 2018 году
hotter_2017 = [city for city, temps in city_temperatures.items() if temps["2017"] - temps["2018"] > 1]
print("\nГорода, где температура в 2017 году выше на более чем 1°C, чем в 2018 году:")
print(hotter_2017)

# 5. Сохранение словаря в бинарный файл с использованием pickle
with open("data.pickle", "wb") as file:
    pickle.dump(city_temperatures, file)
    print("\nДанные сохранены в файл 'data.pickle'.")

# 6. Чтение данных из бинарного файла и восстановление словаря
with open("data.pickle", "rb") as file:
    loaded_data = pickle.load(file)
    print("\nДанные из файла 'data.pickle':")
    print(loaded_data)

input("Press Enter to contine...")